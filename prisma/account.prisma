enum AccountType {
    user
    student
    academy
}

enum imageStorageProvider {
    firebase
    aws
    others
}

enum Day {
    sat
    sun
    mon
    tue
    wed
    thu
    fri
}

model Account {
    id                        String                @id @default(uuid())
    username                  String                @unique
    name                      String
    about                     String?
    email                     String                @unique
    phone                     String                @unique
    image                     String?
    imageStorageProvider      imageStorageProvider? // Assuming `imageStorageProvider` is an enum or String
    coverImage                String?
    coverImageStorageProvider imageStorageProvider? // Assuming `coverImageStorageProvider` is an enum or String
    password                  String?
    accountType               AccountType           @default(user)
    googleSignIn              Boolean               @default(false)
    lastLoginTime             DateTime?
    accountData               AccountData?          @relation("AccountDataOwner")
    createdRoutines           Routine[]             @relation("AccountCreatedRoutines")
    routineMemberships        RoutineMember[]       @relation("AccountRoutineMemberships")
    createdAt                 DateTime              @default(now())
    updatedAt                 DateTime              @updatedAt
}

model AccountData {
    id             String  @id @default(uuid())
    accountID      Account @relation("AccountDataOwner", fields: [ownerAccountId], references: [id], onDelete: Cascade)
    ownerAccountId String  @unique
}

model RoutineMember {
    id             String   @id @default(uuid())
    accountId      String // Account ID of the member
    routineId      String // Routine ID
    member         Account  @relation("AccountRoutineMemberships", fields: [accountId], references: [id])
    routine        Routine  @relation("RoutineMembers", fields: [routineId], references: [id])
    notificationOn Boolean  @default(false)
    captain        Boolean  @default(false)
    owner          Boolean  @default(false)
    isSaved        Boolean  @default(false)
    blacklist      Boolean  @default(false)
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}
